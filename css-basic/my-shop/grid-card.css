* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
}

.itemWrap {
    /* display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap; */
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-gap: 7px;
}

.item {
    /* width: calc(25% - 7px); */
    aspect-ratio: 6 / 5;
    /* 가로값과 세로값 비율로 고정 가로 / 세로  */
    position: relative;
    overflow: hidden;
    /* 흘러나온거 어떻게 처리할건지 이건 숨기기 */
    border-radius: 10px;
    /* margin-bottom: 15px;  */
}

.imgBox {
    width: 100%;
    height: 100%;

}

.imgBox img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.textBox {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    padding: 20px;
    z-index: 3;
}

.textBox p {
    color: white;
    margin: 5px 0 0;
}

.textBox__name {
    font-size: 22px;
    font-weight: 500;
    opacity: 0;
    transform: translateY(50px);
}

.textBox__price {
    font-size: 16px;
    font-weight: 400;
    opacity: 0;
    transform: translateY(50px);
}

.item:after {
    content: "";
    display: block;
    /* 가상선택자로 작성된 가상 요소의 display 속성 기본값은 inline( block X) 입니다.
    때문에 width, height 속성 등 inline에 적용되지 않는 속성들을 사용하기 위해서 
    display:block 속성을 추가해주셔야 합니다. */
    background: rgba(0,0,0,0.2);
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    opacity: 0;
}

.item:hover:after {
    opacity: 1;
}

.item:hover .imgBox img {
    transform: scale(1.1);
    /* 커져라 */
    filter: blur(3px); 
     /* 흐릿해져라 */
}

.item:hover .textBox__name {
    opacity: 1;
    transform: translateY(0);
}

.item:hover .textBox__price {
    opacity: 1;
    transform: translateY(0);
}

.item:after,
.item .imgBox img,
.item .textBox__name,
.item .textBox__price {
    transition: all 0.4s ease-in-out;
}

.item .textBox__price {
    transition: all 0.4s ease-in-out 0.15s;
}